@startuml style

!$commonincludepath ?= "https://raw.githubusercontent.com/JohnLeyva/plantuml-assets/master"
!include $commonincludepath/style-base.puml

$set_direction()

!if ($C4_Include)
  !include <C4/C4_Deployment>
  !include <C4/C4_Container>
!endif

!procedure $C4_System($name,$description='')
    System($name, $GetName($name), $description)
!endprocedure

!procedure $C4_Person($name,$description='')
    Person($name, $GetName($name), $description)
!endprocedure


'!define osaPuml https://raw.githubusercontent.com/Crashedmind/PlantUML-opensecurityarchitecture2-icons/master
'!include osaPuml/Common.puml
'!include osaPuml/User/all.puml
'
'!include <office/Servers/database_server>
'!include <office/Servers/file_server>
'!include <office/Servers/application_server>
'!include <office/Concepts/service_application>
'!include <office/Concepts/firewall>

!$kafkaControlCenterUrl = 'https://kafka/{topic}'

!global $service_textSize = 50
!global $environment_textSize = 30
!global $external_textSize = 30

!global $defaultNoTitle = '_notitle'
!$scaleTextUp = 8
!$scaleTextDown = 4

!$scaleText = $scaleTextUp / $scaleTextDown

!procedure $rem($name)
    !$handle = '$' + $name
    !$stereotype = '<<' + $name + '>>'
    %set_variable_value($name + '_hidden', 1)
    remove $name
    remove $handle
    remove $stereotype
!endprocedure

!function $ishidden($name)
    !return %get_variable_value($name + '_hidden')
!endfunction

!procedure $hide($name)
    !$handle = '$' + $name
    !$stereotype = '<<' + $name + '>>'
    
    %set_variable_value($name + '_hidden', 1)

    hide $name
    hide $handle
    hide $stereotype
    skinparam ArrowThickness<<$name>> 0
    skinparam ArrowFontSize<<$name>> 0
!endprocedure

!procedure $show($name)
    !$handle = '$' + $name
    !$stereotype = '<<' + $name + '>>'
    show $name
    show $handle
    show $stereotype
!endprocedure

!unquoted function $link_type($name)
    !return '<<' + $name + '>> : ' + "<" + $name + '>' 
!endfunction

!procedure $ShowJson($json,$text='=json')
    label l [
        $text
        $json
        {{json
        $json
        }}
    ]
!endprocedure

!function $counter_get($name='counter') return %get_variable_value('autonumber_' + $name)

!function $counter_set($name='counter',$value)
    !return %set_variable_value('autonumber_' + $name, $value)
!end function

!function $counter($name='counter',$increment=1,$seed=1)
    !$current = $counter_get($name)
    !if (%not($current))
        !$result = $seed
    !else
        !$result = $current + $increment
    !endif
    !$nop = $counter_set($name, $result)
    !return $result
!end function

!function $counter_print($name='counter',$increment=1,$seed=1)
    !return '<back:black><color:white>[' + $counter($name, $increment, $seed) + ']</color></back>' 
!end function

!function $link_id($name) 
    !return '<<thick>>' + '<<' + $name + '>>' + ' :' + $counter_print() + $GetName($name)
!end function

!function $link_entity($name) 
    %set_variable_value('entity_last', $name)
    !return %chr(34) + $name + %chr(34)
!end function

!unquoted function $stereotype($str)
    !if ($str=='')
        return $str
    !endif

    !$result = ''
    !$parts = %splitstr($str,";") 
    !foreach $item in $parts
        !if (%substr($item,0,1) != "#" )
            !$result = $result + '<<' + $item + '>>'
        !endif
    !endfor 
    !return $result
!endfunction
'[ <<aa>> $stereotype(one;two) <<cc>>]

!function $linkRes($str)
    !$separator="|"
    !$count = $strSegmentCount($str,$separator) -  1
    !$res = ''
    !while ($count >= 0)
        !$part = $strSegmentGet($str,$separator,$count)
        !$key = $strSegmentGet($part,'!',0)
        !$url = $strSegmentGet($part,'!',1)
        !$keytag = "<" + $key + ">"
        !$res = $link($keytag, $url) + " " + $res
        !$count = $count - 1
    !endwhile 
    !return $res 
!endprocedure
!procedure $linkRes_Test()
    label linkRes [
        $linkRes('A!http://aaa.com|B!http://bbb.com|C!http://ccc.com')
    ]
!endprocedure
'$linkRes_Test()

!function $linkObj($json_object)
    !$res = ''
    !if (%get_json_type($json_object) == "object")
        !foreach $key in %get_json_keys($json_object)
            !$keytag = "<" + $key + ">"
            !$res = $res + " " + $link($keytag,$json_object[$key])
        !endfor
    !endif
    !return $res 
!endprocedure
!procedure $linkObj_Test()
    !$url_data = { 
        "A" : "http://aaa.com",
        "B" : "http://bbb.com",
        "C" : "http://ccc.com"
      }
    label linkObj [
        $linkObj($url_data)
    ]
!endprocedure
'$linkObj_Test()

!global $label_Inventory_store = ''
!procedure $label_Inventory_add($value)
    !if (%strlen($value)>0)
        !global $label_Inventory_separator = '|'
        !global $label_Inventory_store = $strAppend($label_Inventory_store,$value,$label_Inventory_separator)
    !endif
!endprocedure
!procedure $label_Inventory_add_test()
    $label_Inventory_add(BBBb)
    $label_Inventory_add(AAAAA)
    card label_Inventory_add_test [
        $label_Inventory_store
    ]
!endprocedure
'$label_Inventory_add_test()


!global $label_NoTitle_counter = 0
!function $label($str='',$data=0,$sizeArg=0)
    $label_Inventory_add($str)

    !if $str == ''
        !$label_NoTitle_counter = $label_NoTitle_counter + 1
        !$str = $global_last_name + "_" + $defaultNoTitle + "_" + $label_NoTitle_counter
    !endif

    !$dataname = "$" + $str + "_data"
    !$links = ''
    !if (%get_json_type($data) != "object")
        !if (%variable_exists($dataname))
            !$data = %get_variable_value($dataname)
        !endif
    !endif

    !if (%get_json_type($data) == "object")
        !$links = $linkObj($data.url)
        !if ($data.text_size > 0)
            !$sizeArg = $data.text_size
        !endif
    !endif

    !if (%get_json_type($data) == "string")
        !if (%strpos($data,"://") > 0)
            !$links = $linkRes($data.url)
            !if ($data.text_size > 0)
                !$sizeArg = $data.text_size
            !endif
        !endif
    !endif

    !$sizeArg = %intval($sizeArg)
    !$size = ( $sizeArg * $scaleTextUp / $scaleTextDown )

    !$parts = %splitstr($str,";")
    !$res = $str

    !if ($size > 0)
        !$sizeStart = '<size:' + $size + '>'
        !$sizeEnd = '</size>'
    !else
        !$sizeStart = ''
        !$sizeEnd = ''
    !endif

    !$name = $GetName($str)
    !$entityLevel = $strSegmentCount($str)

    !global $global_last_name = $str
    !global $global_last_entityLevel = $entityLevel

    !if ($strContains($str,$defaultNoTitle))
        !$res = $res + ' as " " '
    !else
        !$labelAs = $sizeStart + $name + $sizeEnd + $links
        !$icon = $entity_icon_map($EntityType)
        !if ($icon != '')
            !$icon = $icon($icon,25)
        !endif

        !if (%strlen($labelAs) > 0 )
            !$res = $res + ' as "' + $icon + $labelAs + '" '
        !endif
    !endif

    !return $res
!endfunction
$assert('assert_Service_1 as "assert Service 1" ' ,$label('assert_Service_1'))
$assert('assert_notitle as " " ' ,$label('assert_notitle'))

!procedure $label_Test() 
    !$Any_Service_3_data1 = { "url" : { 
        "A" : "http://aaa.com",
        "B" : "http://bbb.com",
        "C" : "http://ccc.com"
      },
      "text_size" : 20 }

    rectangle label_Test [
        == label_Test
        ---
            Size = 30
            $label(Any_Service_2,0,20)
        ---
            $label(Any_Service_3,$Any_Service_3_data1,15)
        ---
            $label(Any_Service_4,'F!http://aaa.com|G!http://bbb.com|H!http://ccc.com',15)
    ]
!endprocedure
'$label_Test()


!unquoted procedure $scale($type, $name, $action = '', $factor = 4)
    !$scale2 = $factor * $scaleText
    label $name [
    {{
        scale $scale2
        $type $label($name,$action,10)
    }}
    ]
!endprocedure
!procedure $scale_Test() 
    $scale(actor/,ACTOR_T,'')
!endprocedure
' $scale_Test()

!procedure title($text)
    !$message = $GetName($text)
    title <size:30>$message / %date("yyyy-MM-dd")
!endprocedure 

!function SetEntityType($type='')
    !global $EntityType = $type
    !return $type
!endfunction 


!function $service($name = '', $data = '')
    SetEntityType(service)
    !return "frame " + $label($name,$data,$service_textSize) + " <<service>> " 
!endfunction

!function $environment($name = '', $data = '')
    SetEntityType(environment)
    !return "rectangle " + $label($name,$data,$environment_textSize) + " <<environment>> "
!endfunction

!function $external($name = '', $data = '')
    SetEntityType(external)
    !return "cloud " + $label($name,$data,$external_textSize) + " <<environment>> "
!endfunction

!function $transaction($name = '', $data = '') {
    SetEntityType(transaction)
    !return "hexagon " + $label($name,$data) + " <<transaction>> "
!endfunction

'entity icons

!procedure $entity($name,$type,$size=0,$color=0)
    !$name_inner=$name + "_inner"
    rectangle $label($name) {
        label $name_inner [
            $icon($type,$size,$color)
        ]
    }
!end procedure

!procedure email($name, $size=0,$color=0)
    $entity($name, 'email', $size, $color)
!end procedure

!procedure timer($name,$size=0,$color=0)
    $entity($name, 'timer', $size, $color)
!end procedure

!procedure parcel($name,$size=100,$color="RosyBrown")
    $entity($name,parcel,$size,$color)
!end procedure

!procedure computer($name,$size=100,$color="RosyBrown")
    $entity($name,monitor,$size,$color)
!end procedure

' entities end

!function actor          ($name='',$data='') !return SetEntityType('actor'         ) + ' ' + $label($name,$data)
!function actor2         ($name='',$data='') !return SetEntityType('actor/'        ) + ' ' + $label($name,$data)
!function agent          ($name='',$data='') !return SetEntityType('agent'         ) + ' ' + $label($name,$data)
!function artifact       ($name='',$data='') !return SetEntityType('artifact'      ) + ' ' + $label($name,$data)
!function boundary       ($name='',$data='') !return SetEntityType('boundary'      ) + ' ' + $label($name,$data)
!function card           ($name='',$data='') !return SetEntityType('card'          ) + ' ' + $label($name,$data)
!function circle         ($name='',$data='') !return SetEntityType('circle'        ) + ' ' + $label($name,$data)
!function cloud          ($name='',$data='') !return SetEntityType('cloud'         ) + ' ' + $label($name,$data)
!function collections    ($name='',$data='') !return SetEntityType('collections'   ) + ' ' + $label($name,$data)
!function component      ($name='',$data='') !return SetEntityType('component'     ) + ' ' + $label($name,$data)
!function control        ($name='',$data='') !return SetEntityType('control'       ) + ' ' + $label($name,$data)
!function database       ($name='',$data='') !return SetEntityType('database'      ) + ' ' + $label($name,$data)
!function entity         ($name='',$data='') !return SetEntityType('entity'        ) + ' ' + $label($name,$data)
!function file           ($name='',$data='') !return SetEntityType('file'          ) + ' ' + $label($name,$data)
!function folder         ($name='',$data='') !return SetEntityType('folder'        ) + ' ' + $label($name,$data)
!function frame          ($name='',$data='') !return SetEntityType('frame'         ) + ' ' + $label($name,$data)
!function hexagon        ($name='',$data='') !return SetEntityType('hexagon'       ) + ' ' + $label($name,$data)
!function interface      ($name='',$data='') !return SetEntityType('interface'     ) + ' ' + $label($name,$data)
!function label          ($name='',$data='') !return SetEntityType('label'         ) + ' ' + $label($name,$data)
!function node           ($name='',$data='') !return SetEntityType('node'          ) + ' ' + $label($name,$data)
!function package        ($name='',$data='') !return SetEntityType('package'       ) + ' ' + $label($name,$data)
!function person         ($name='',$data='') !return SetEntityType('person'        ) + ' ' + $label($name,$data)
!function queue          ($name='',$data='') !return SetEntityType('queue'         ) + ' ' + $label($name,$data)
!function rectangle      ($name='',$data='') !return SetEntityType('rectangle'     ) + ' ' + $label($name,$data)
!function stack          ($name='',$data='') !return SetEntityType('stack'         ) + ' ' + $label($name,$data)
!function storage        ($name='',$data='') !return SetEntityType('storage'       ) + ' ' + $label($name,$data)
!function usecase        ($name='',$data='') !return SetEntityType('usecase'       ) + ' ' + $label($name,$data)
!function usecase2       ($name='',$data='') !return SetEntityType('usecase/'      ) + ' ' + $label($name,$data)

!function abstract_class ($name='',$data='') !return SetEntityType('abstract class') + ' ' + $label($name,$data)
!function class          ($name='',$data='') !return SetEntityType('class'         ) + ' ' + $label($name,$data)
!function enum           ($name='',$data='') !return SetEntityType('enum'          ) + ' ' + $label($name,$data)
!function abstract       ($name='',$data='') !return SetEntityType('abstract'      ) + ' ' + $label($name,$data)
!function annotation     ($name='',$data='') !return SetEntityType('annotation'    ) + ' ' + $label($name,$data)
!function circle         ($name='',$data='') !return SetEntityType('circle'        ) + ' ' + $label($name,$data)
!function diamond        ($name='',$data='') !return SetEntityType('diamond'       ) + ' ' + $label($name,$data)
!function entity         ($name='',$data='') !return SetEntityType('entity'        ) + ' ' + $label($name,$data)
!function exception      ($name='',$data='') !return SetEntityType('exception'     ) + ' ' + $label($name,$data)
!function metaclass      ($name='',$data='') !return SetEntityType('metaclass'     ) + ' ' + $label($name,$data)
!function protocol       ($name='',$data='') !return SetEntityType('protocol'      ) + ' ' + $label($name,$data)
!function stereotype     ($name='',$data='') !return SetEntityType('stereotype'    ) + ' ' + $label($name,$data)
!function struct         ($name='',$data='') !return SetEntityType('struct'        ) + ' ' + $label($name,$data)
!function port           ($name='',$data='') !return SetEntityType('port'          ) + ' ' + $label($name,$data)
!function portIn         ($name='',$data='') !return SetEntityType('portIn'        ) + ' ' + $label($name,$data)
!function portOut        ($name='',$data='') !return SetEntityType('portOut'       ) + ' ' + $label($name,$data)

'Sequence Diagram
!function box          ($name='',$data='') !return 'box '         + $label($name,$data)
!function participant  ($name='',$data='') !return 'box '         + $label($name,$data)


!function $push() return "-->"

!function $transactionLink()
    !return ' *--> "<<transaction>>"'
!endfunction

!procedure $topic($name,$format='',$icon='')
    !$topicName = $strReplace($name,'_queue','')
    !$topicName = $strReplace($name,'_topic','')
    !$topicName = $strReplace($name,'_','-')
    !$topicName = $strReplace($name,'--','_')
    !$topicUrl = $strReplace($kafkaControlCenterUrl,'{topic}',$topicName)
    !$topicLink = $link($topicName,$topicUrl)
    !$alias = $topicLink
    !$alias = $strPrepend($alias,$icon,' ')
    !$alias = $strAppend($alias,$highlight($format),'\n')
    queue $name as "$alias"
    $label_Inventory_add($name)
!endprocedure

!procedure $kafka($name,$format='')
    $topic($name,$format,"<$kafka*0.5>")
!endprocedure

!procedure $topic_message($topicname,$messageType) 
    !$notename = $topicname + "_" + $messageType
    note as $notename
        %invoke_procedure($messageType)
    end note
    $topicname -- $notename
!endprocedure

!unquoted procedure $tag($text='',$desc='', $tagcolor='#black')
    note on link $tagcolor|lightgray
        <&cog><color:#black>$text</color><back:#white><color:#black>$desc</color></back>
    endnote
!endprocedure

!unquoted procedure $black_tag($text='',$desc='')
    note on link #black|lightgray
        <&cog><color:#black>$text</color><back:#white><color:#black>$desc</color></back>
    endnote
!endprocedure

' Options

!unquoted procedure PK($field)
    <u>$field</u>
!endprocedure

!unquoted procedure NotUsed($field)
    <s:red>$field</s>
!endprocedure

!function $option_label($text='',$desc='')
    !$linklabel = $GetName($text)
    !return '<color:purple><size:20><&tag>' + $linklabel + '</size></color>'
!endfunction

!function $option_pro()
    !return '<color:green><size:25><&thumb-up></size></color>'
!endfunction

!function $option_con()
    !return '<color:red><size:25><&thumb-down></size></color>'
!endfunction

!function $option_link($name)
    !if ($ishidden($name) == 1)
        !return '<<alt>> <<' + $name + '>> : . '
    !endif 
    !return '<<alt>> <<' + $name + '>> : ' + $option_label($name)
!endfunction

!procedure $note_start($name='', $target='')
    !if ($target=='')
        !global $global_last_note_target = $global_last_name
    !else
        !global $global_last_note_target = $target
    !endif

    !if ($name=='')
        !$name = $global_last_name + "_note"
    !endif
    !global $global_last_note_name = $name

    !if ($name == '')
    note on link
    !else
        !$handle = '$' + $name
        !$stereotype = '<<' + $name + '>>'
    note as $name $handle $stereotype
    !endif
!endprocedure

!procedure $note_end()
    end note
    !if ($global_last_note_target != '')
        !$handle = '$' + $global_last_note_name
        !$stereotype = '<<' + $global_last_note_name + '>>'
        !if (%not($ishidden($global_last_note_name)))
            !if (%not($ishidden($global_last_note_target)))
                $global_last_note_name -- $global_last_note_target $stereotype
            !endif
        !endif
    !endif
    !global $global_last_note_name = ''
    !global $global_last_note_target = ''
!endprocedure

!procedure note($text, $name='', $target='')
    $note_start($name, $target)
    $text
    $note_end()
!endprocedure

!procedure $note_test()
    component(note_test_component)
    note(abc)
!endprocedure
'$note_test()

!procedure $option_note_start($name='', $target='')
    $note_start($name, $target)
    !$str = $strReplace($name,$defaultWordSeparator,' ')
    $option_label($str)
!endprocedure

!procedure $option_note_end()
    $note_end()
!endprocedure

!procedure $option_test()
rectangle option_test $example {
    card option_test_card [
        $option_label("Opt ABC")
        $option_pro() : option_pro
        $option_con() : option_con
    ]

    component option_test_component

    option_test_card -- option_test_component $option_link(note_opt_test)
    $option_note_start(note_opt_test, option_test_card)
        description
        ---
        $option_pro() : option_pro
        $option_con() : option_con
    $option_note_end()
}
!endprocedure
'$option_test()

!function $label_filter($suffix,$template)
    !$count = $strSegmentCount($label_Inventory_store,$label_Inventory_separator)
    !$result = ""
    !while ($count > 0)
        !$count = $count - 1
        !$labelValue = $strSegmentGet($label_Inventory_store,$label_Inventory_separator,$count)
        !if ($strHasSuffix($labelValue,$suffix))
            !$countLabelSegmentCount = $strSegmentCount($labelValue)
            !$resultItem = ""
            !$countLabelSegmentPos = 0
            !while ($countLabelSegmentPos < $countLabelSegmentCount)
                !$labelValueSegment = $strSegmentGet($labelValue, $defaultPartSeparator, $countLabelSegmentPos)
                !$resultItem = $strAppend($resultItem, $labelValueSegment, $defaultPartSeparator)
'                !if ( %not($strContainsSegment($result, $resultItem, $label_Inventory_separator))&& $strContainsSegment($label_Inventory_store, $resultItem, $label_Inventory_separator) )
                !if ( %not($strContainsSegment($result, $resultItem, $label_Inventory_separator)))
                    !$result = $result + $strReplace($template,"%",$resultItem)
                !endif
                !$countLabelSegmentPos = $countLabelSegmentPos + 1
            !endwhile
            '!$result = $result + $strReplace($template,"%",$resultItem)
        !endif
    !endwhile
    !return $result
!endfunction

!procedure $label_filter_test()
    !$value = $label_filter('Environment',"%" + %newline())
    card label_filter_test_jsonc [
        $value
    ]
!endprocedure

'$style_test_all()
'$label_filter_test()

!procedure $label_hide($suffix)
    $label_filter($suffix,"hide %" + %newline())
!endprocedure

!procedure $label_show($suffix)
    $label_filter($suffix,"show %" + %newline())
!endprocedure

!procedure $label_remove($suffix)
    $label_filter($suffix,"remove %" + %newline())
!endprocedure

@enduml